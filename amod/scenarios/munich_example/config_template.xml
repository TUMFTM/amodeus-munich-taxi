<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">

<config>

	<module name="ftm_simulation">
		<!-- The time interval at which dispatching is scheduled -->
		<param name="dispatchingPeriodSeconds" value="30"/>
		<!-- The dispatcher BPM or NTNR -->
		<param name="dispatcherType" value="BPM"/>
		<!-- The time interval at which rebalacing is scheduled -->
		<param name="rebalancingPeriodSeconds" value="1200"/>
		<!-- The number of time steps ahead taken into consideration for rebalancing -->
		<param name="rebalancingSteps" value="2"/>
		<!-- The time interval at which fleetsizing is scheduled -->
		<param name="fleetsizePeriod" value="60"/>
		<!-- XML file specifying the shapes of the rebalacing grid-->
		<param name="gridInformationFile" value="grid_information.xml"/>
		<!-- XML file containing the predicitions for each cell in the rebalacing grid -->
		<param name="rebalancingDemandFile" value="predictions.xml"/>
		<!-- XML file containing the historic target probabilities for a ride to finish at cell i  -->
		<param name="targetProbabilitiesFile" value="target_probabilities.xml"/>
		<!-- GeoJson file with the boundaries of the simulation area  -->
		<param name="areaGeoJSONFile" value="../../networks/munich_area.geojson"/>
		<!-- Timestamp the simulation starts  -->
		<param name="simStartDateTime" value="2016-11-07T06:00:00.000+01:00[Europe/Berlin]"/>
		<!-- Timestamp the simulation ends  -->
		<param name="simEndDateTime" value="2016-11-07T08:00:00.000+01:00[Europe/Berlin]"/>
		<!-- Time the simulation is extended at the end to ensure that all trips begun can finish  -->
		<param name="simEndTimeBufferSeconds" value="7200"/>
		<!-- Input file that defines the target fleet size at each point in time  -->
		<param name="dynamicFleetSizeFile" value="dynamic_fleet_size.xml"/>
		<!-- Input file containing the geometries of the dispatching zones  -->
		<param name="dispatchingZonesFile" value="dispatchingZones.xml"/>
		<!-- Input containing the positions of taxi ranks  -->
		<param name="taxiRanksFile" value="taxiRanks.xml"/>
		<!-- The maximum amount of seconds a customer waits in the simulation before the ride gets declined  -->
		<param name="maxCustomerWaitingTime" value="1200"/>
		<!-- The maximum amount of seconds a customer waits until the ride was assigned in the simulation before the ride gets declined  -->
		<param name="maxCustomerAssignmentTime" value="250"/>
		<!-- Bloody hacky cheat that works only on the Munich scenario, to exclude airport rides  -->
		<param name="airportPickups" value="false"/>
		<!-- Alpha value only used on the RebalncingLPDispatcher  -->
		<param name="alpha" value="0.1855"/>
		<!-- Lambda value only used on the RebalncingLPDispatcher  -->
		<param name="lambda" value="12.26"/>
		<parameterset type="revenue">
			<!-- Revenue settings in € used for analysis  -->
			<param name="revenuePerKmBelow5Km" value="2" />
			<param name="revenuePerKmBelow10Km" value="1.8" />
			<param name="revenuePerKmAbove10Km" value="1.7" />
			<param name="revenuePerTrip" value="3.7" />
		</parameterset>
		<parameterset type="costs">
			<!-- Costs settings in € used for analysis  -->
			<param name="costsPerKm" value="0.18"/>
			<param name="costsPerHour" value="13.31"/>
		</parameterset>
		<parameterset type="fleetsize">
			<!-- dynamic or static  -->
			<param name="strategy" value="dynamic"/>
			<!-- parameter to scale the target number specified in dynamicFleetSizeFile -->
			<param name="percentage" value="1"/>
			<!-- number of vehicles added to the simulation -->
			<param name="staticNumberOfVehicles" value="350"/>
		</parameterset>
	</module>


	<module name="amodeus">
		<parameterset type="linkSpeeds">
			<param name="linkSpeedFile" value="linkSpeedData"/>
		</parameterset>
		<parameterset type="mode">
			<param name="mode" value="av"/>

			<parameterset type="generator">
				<param name="type" value="PopulationDensity"/>
			</parameterset>

			<parameterset type="router">
				<param name="type" value="DynamicTravelTimeFastAStarLandmarkRouter"/>
            </parameterset>

            <parameterset type="dispatcher">
                <param name="type" value="ReferenceDispatcher"/>
				<param name="distanceHeuristics" value="EUCLIDEAN"/>
            </parameterset>

            <parameterset type="timing">
				<param name="dropoffDurationPerPassenger" value="162.0" />
				<param name="minimumDropoffDurationPerStop" value="60" />
				<param name="minimumPickupDurationPerStop" value="60.0" />
				<param name="pickupDurationPerPassenger" value="162.0" />
			</parameterset>

			<parameterset type="pricing">
				<param name="pricePerKm" value="0.001" />
				<param name="pricePerMin" value="0.0" />
				<param name="pricePerTrip" value="3.0" />
			</parameterset>


			<parameterset type="waitingTime" >
				<param name="constantWaitingTimeAttribute" value="null" />
				<param name="defaultWaitingTime" value="0.0" />
				<param name="estimationAlpha" value="0.0" />
				<param name="estimationEndTime" value="22:00:00" />
				<param name="estimationInterval" value="00:05:00" />
				<param name="estimationLinkAttribute" value="avWaitingTimeGroup" />
				<param name="estimationStartTime" value="05:00:00" />
			</parameterset>
		</parameterset>
	</module>

	<module name="network">
		<param name="inputNetworkFile" value="../../networks/hybrid_amodeus_network.xml.gz" />
	</module>

	<module name="plans">
		<param name="inputPlansFile" value="rawPopulation.xml" />
	</module>

	<module name="controler">
		<param name="writeEventsInterval" value="1" />
		<param name="writePlansInterval" value="1" />
		<param name="eventsFileFormat" value="xml" />
		<param name="outputDirectory" value="output/001"/>
		<param name="firstIteration" value="0" />
		<param name="lastIteration" value="0" />
		<param name="mobsim" value="qsim" />
		<param name="overwriteFiles" value="deleteDirectoryIfExists" />
	</module>

	<module name="qsim" >
		<param name="startTime" value="0:00:00" />
		<param name="endTime" value="4:00:00" />
		<param name="flowCapacityFactor" value="1000000000000" />
		<param name="storageCapacityFactor" value="1000000000000" />
		<param name="numberOfThreads" value="4" />
		<param name="snapshotperiod" value="00:00:10"/>

		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />

		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="1.0" />
		<param name="timeStepSize" value="00:00:01" />

		<!-- `queue' for the standard queue model, `withHolesExperimental' (experimental!!) for the queue model with holes -->
		<param name="trafficDynamics" value="queue" />

		<!-- decides if waiting vehicles enter the network after or before the already driving vehicles were moved. Default: false -->
		<param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="true" />
		<!-- If link dynamics is set as SeepageQ, set to false if all seep modes should perform seepage. Default is true (better option). -->
		<param name="isRestrictingSeepage" value="true" />
		<!-- If link dynamics is set as SeepageQ, set to true if seep mode do not consumes any space on the link. Default is false. -->
		<param name="isSeepModeStorageFree" value="false" />
		<!-- default: FIFO; options: FIFO PassingQ SeepageQ -->
		<param name="linkDynamics" value="SeepageQ" />
		<!-- The (initial) width of the links of the network. Use positive floating point values. This is used only for visualisation. -->
		<param name="linkWidth" value="30.0" />
		<!-- [comma-separated list] Defines which modes are congested modes. Technically, these are the modes that the departure handler of the netsimengine handles.  Effective cell size, effective lane width, flow capacity factor, and storage capacity factor need to be set with diligence.  Need to be vehicular modes to make sense. -->
		<param name="mainMode" value="car" />
		<!-- Shortens a link in the visualization, i.e. its start and end point are moved into towards the center. Does not affect traffic flow.  -->
		<param name="nodeOffset" value="0.0" />
		<!-- Number of threads used for the QSim.  Note that this setting is independent from the "global" threads setting.  In contrast to earlier versions, the non-parallel special version is no longer there. -->
		<param name="numberOfThreads" value="4" />
		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set a seep mode. Default is bike. -->
		<param name="seepMode" value="av" />
	</module>

	<module name="planCalcScore">
		<param name="writeExperiencedPlans" value="true" />

		<param name="BrainExpBeta" value="1.0" />

		<!-- [utils] alternative-specific constant for pt.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
		<param name="constantPt" value="-2" />

		<!-- [utils] alternative-specific constant for car.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
		<param name="constantCar" value="-2" />
		<param name="constant_av" value="8.359" />

		<!-- [utils] alternative-specific constant for walk.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
		<param name="constantWalk" value="0.0" />

		<!-- [utils/hr] utility for departing early (i.e. before the earliest end time).  Probably implemented correctly, but not tested. -->
		<param name="earlyDeparture" value="0.0" />

		<!-- [utils/hr] utility for arriving late (i.e. after the latest start time).  normally negative -->
		<param name="lateArrival" value="0.0" />

		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />

		<!-- [utils/unit_of_money] conversion of money (e.g. toll, distance cost) into utils -->
		<param name="marginalUtilityOfMoney" value="1" />

		<!-- DISCOURAGED! [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility.  It is discouraged to use this but in some cases it may make sense. -->
		<param name="marginalUtlOfDistanceWalk" value="0.0" />

		<!-- [unit_of_money/m] conversion of car distance into money -->
		<param name="monetaryDistanceRateCar" value="-0.000378" />
		<param name="monetaryDistanceRate_av" value="0.0" />

		<!-- [unit_of_money/m] conversion of pt distance into money -->
		<param name="monetaryDistanceRatePt" value="0.0" />

		<!-- [utils/hr] marginal utility of doing an activity.  normally positive.  also the opportunity cost of time if agent is doing nothing. -->
		<param name="performing" value="12.86" />

		<!-- [utils/hr] additional marginal utility of traveling by car.  normally negative.  this comes on top of the opportunity cost of time -->
		<param name="traveling" value="0" />
		<param name="traveling_av" value="0" />

		<!-- [utils/hr] additional marginal utility offset of traveling by pt.  normally negative.  this comes on top of the opportunity cost of time -->
		<param name="travelingPt" value="0" />

		<!-- [utils/hr] additional marginal utility offset of traveling by foot.  normally negative.  this comes on top of the opportunity cost of time.  also see marginalUtlOfDistanceWalk -->
		<param name="travelingWalk" value="0.0"/>

		<!-- [utils] utility of switching a line (= transfer penalty).  Normally negative -->
		<param name="utilityOfLineSwitch" value="0.0"/>

		<!-- [utils/hr] utility offset for waiting.  this comes on top of the opportunity cost of time.  Probably implemented correctly, but not tested. -->
		<param name="waitingPt" value="-12.86" />
		<param name="waiting" value="-12.86" />

		<param name="activityType_0"            value="home" /> <!-- home -->
		<param name="activityPriority_0"        value="1" />
		<param name="activityTypicalDuration_0" value="13:00:00" />
		<param name="activityMinimalDuration_0" value="01:00:00" />

		<param name="activityType_1"            value="work" />
		<param name="activityPriority_1"        value="1" />
		<param name="activityTypicalDuration_1" value="09:00:00" />
		<param name="activityMinimalDuration_1" value="08:00:00" />
		<param name="activityOpeningTime_1"     value="08:00:00" />
		<param name="activityEarliestEndTime_1" value="17:00:00" />
		<param name="activityLatestStartTime_1" value="09:00:00" />
		<param name="activityClosingTime_1" value="18:00:00" />

		<param name="activityType_2"            value="secondary" />
		<param name="activityPriority_2"        value="1" />
		<param name="activityTypicalDuration_2" value="01:00:00" />
		<param name="activityMinimalDuration_2" value="00:30:00" />
		<param name="activityOpeningTime_2"     value="08:00:00" />
		<param name="activityClosingTime_2" value="20:00:00" />
	</module>

	<module name="strategy">
		<param name="maxAgentPlanMemorySize" value="5" /> <!-- 0 means unlimited -->

		<param name="ModuleProbability_1" value="0.75" />
		<param name="Module_1" value="ChangeExpBeta" />

		<param name="ModuleProbability_4" value="0.05" />
		<param name="Module_4" value="TimeAllocationMutator" />
		<param name="ModuleDisableAfterIteration_4" value="420" />
	</module>

	<!-- ====================================================================== -->

	<module name="TimeAllocationMutator" >
		<param name="mutationRange" value="3600.00" />
	</module>

	<!-- ====================================================================== -->

	<module name="transitRouter" >

		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />

		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="500.0" />

		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="300.0" />

		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1500.0" />
	</module>


	<module name="subtourModeChoice" >

		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car" />

		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="true" />

		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,walk,av" />
	</module>

</config>
